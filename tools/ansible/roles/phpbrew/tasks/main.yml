---
- name: checkout phpbrew
  git: repo=https://github.com/phpbrew/phpbrew.git dest=/opt/phpbrew-bin

- name: make a link to phpbrew
  file: state=link src=/opt/phpbrew-bin/phpbrew dest=/usr/bin/phpbrew

- name: install PHP CLI interpreter
  apt: name=php-cli state=present

- name: create phpbrew root
  file: state=directory dest=/opt/phpbrew

- name: Install system packages
  apt: name={{ item }} state=present
  with_items: "{{ phpbrew_requirements }}"

- name: Remove useless packages from the cache
  apt:
    autoclean: yes

- name: Remove dependencies that are no longer required
  apt:
    autoremove: yes

- name: run phpbrew init
  shell: phpbrew init --root=/opt/phpbrew

- name: create a PHP environment with phpbrew
  shell: PHPBREW_ROOT=/opt/phpbrew PHPBREW_HOME=/opt/phpbrew phpbrew install {{ phpbrew_php_version }} {{ phpbrew_php_variants }} creates="/opt/phpbrew/php/php-{{ phpbrew_php_version }}/bin/php"

- name: install PHP extensions
  shell: bash -c "export PHPBREW_ROOT=/opt/phpbrew && export PHPBREW_HOME=/opt/phpbrew && source /root/.phpbrew/bashrc && phpbrew switch php-{{ phpbrew_php_version }} && phpbrew ext install {{ item.name }}" creates="/opt/phpbrew/php/php-{{ phpbrew_php_version }}/var/db/{{ item.config }}"
  with_items:
    - { name: gd, config: "gd.ini" }
    - { name: curl, config: "curl.ini" }
  notify: "restart php-fpm"

- name: put php-fpm.conf
  template: src=php-fpm.conf dest="/opt/phpbrew/php/php-{{ phpbrew_php_version }}/etc/php-fpm.conf"
  when: "phpbrew_enable_php_fpm_service"
  notify: "restart php-fpm"

- name: set timezone in php.ini
  lineinfile:
    dest: "/opt/phpbrew/php/php-{{ phpbrew_php_version }}/etc/php.ini"
    regexp: "^;date.timezone ="
    line: "date.timezone = \"{{ timezone }}\""
  when: "timezone|default(False) != False"
  notify: "restart php-fpm"

- name: put php-fpm unit file
  template: src=php-fpm.service dest="/etc/systemd/system/php-fpm{{ phpbrew_php_version | regex_replace('\\.', '_') }}.service" owner=root group=root mode=0644
  when: "phpbrew_enable_php_fpm_service and ((ansible_distribution == 'Debian' and ansible_distribution_major_version == '8') or (ansible_distribution == 'Ubuntu' and (ansible_distribution_version|version_compare(14.04, '>'))))"

# add to sudo service
# - name: enable php-fpm service
#   service: name="php-fpm{{ phpbrew_php_version | regex_replace('\\.', '_') }}" enabled=yes state=started
#   when: "phpbrew_enable_php_fpm_service and ((ansible_distribution == 'Debian' and ansible_distribution_major_version == '8') or (ansible_distribution == 'Ubuntu' and (ansible_distribution_version|version_compare(14.04, '>'))))"
